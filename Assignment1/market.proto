syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/descriptor.proto";

// Seller service definition
service SellerService {
  rpc RegisterSeller(RegisterSellerRequest) returns (RegisterSellerResponse);
  rpc SellItem(SellItemRequest) returns (SellItemResponse);
  rpc UpdateItem(UpdateItemRequest) returns (UpdateItemResponse);
  rpc DeleteItem(DeleteItemRequest) returns (DeleteItemResponse);
  rpc DisplaySellerItems(DisplaySellerItemsRequest) returns (DisplaySellerItemsResponse);
}

// Buyer service definition
service BuyerService {
  rpc SearchItem(SearchItemRequest) returns (SearchItemResponse);
  rpc BuyItem(BuyItemRequest) returns (BuyItemResponse);
  rpc AddToWishList(AddToWishListRequest) returns (AddToWishListResponse);
  rpc RateItem(RateItemRequest) returns (RateItemResponse);
}

// Messages for Seller functionalities
message RegisterSellerRequest {
  string ip_port = 1;
  string uuid = 2;
}

message RegisterSellerResponse {
  enum Status {
    SUCCESS = 0;
    FAILED = 1;
  }
  Status status = 1;
}

message SellItemRequest {
  string product_name = 1;
  Category category = 2;
  int32 quantity = 3;
  string description = 4;
  string seller_address = 5;
  string seller_uuid = 6;
  double price = 7;
}

message SellItemResponse {
  enum Status {
    SUCCESS = 0;
    FAILED = 1;
  }
  Status status = 1;
  int32 item_id = 2;
}

message UpdateItemRequest {
  int32 item_id = 1;
  double new_price = 2;
  int32 new_quantity = 3;
  string seller_address = 4;
  string seller_uuid = 5;
}

message UpdateItemResponse {
  enum Status {
    SUCCESS = 0;
    FAILED = 1;
  }
  Status status = 1;
}

message DeleteItemRequest {
  int32 item_id = 1;
  string seller_address = 2;
  string seller_uuid = 3;
}

message DeleteItemResponse {
  enum Status {
    SUCCESS = 0;
    FAILED = 1;
  }
  Status status = 1;
}

message DisplaySellerItemsRequest {
  string seller_address = 1;
  string seller_uuid = 2;
}

enum Category {
    ELECTRONICS = 0;
    FASHION = 1;
    OTHERS = 2;
    ANY = 3;
  }

message DisplaySellerItemsResponse {
  message ItemDetails {
    int64 item_id = 1;
    string product_name = 2; 
    Category category = 3;
    int32 quantity = 4;
    string description = 5;
    string seller_address = 6;
    string seller_uuid = 7;
    double price = 8;
    double rating = 9;
  }
  repeated ItemDetails items = 1;
}

// Messages for Buyer functionalities
message SearchItemRequest {
  string item_name = 1;
  Category category = 2;
}

message SearchItemResponse {
  message SearchResult {
    int32 item_id = 1;
    double price = 2;
    string name = 3;
    Category category = 4;
    string description = 5;
    int32 quantity_remaining = 6;
    double rating = 7;
    string seller = 8;
  }
  repeated SearchResult results = 1;
}

message BuyItemRequest {
  int32 item_id = 1;
  int32 quantity = 2;
  string buyer_address = 3;
}

message BuyItemResponse {
  enum Status {
    SUCCESS = 0;
    FAILED = 1;
  }
  Status status = 1;
}

message AddToWishListRequest {
  int32 item_id = 1;
  string buyer_address = 2;
}

message AddToWishListResponse {
  enum Status {
    SUCCESS = 0;
    FAILED = 1;
  }
  Status status = 1;
}

message RateItemRequest {
  int32 item_id = 1;
  string buyer_address = 2;
  int32 rating = 3;
}

message RateItemResponse {
  enum Status {
    SUCCESS = 0;
    FAILED = 1;
  }
  Status status = 1;
}